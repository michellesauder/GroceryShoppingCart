// <auto-generated />
using System;
using GroceryShoppingCart.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GroceryShoppingCart.Migrations
{
    [DbContext(typeof(GroceryCartContext))]
    [Migration("20190125224222_intialCreate")]
    partial class intialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GroceryShoppingCart.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.Drinks", b =>
                {
                    b.Property<int>("DrinkId");

                    b.Property<string>("Description");

                    b.Property<double>("Price");

                    b.HasKey("DrinkId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<string>("Branch");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.Fruits", b =>
                {
                    b.Property<int>("FruitId");

                    b.Property<string>("Description");

                    b.Property<double>("Price");

                    b.HasKey("FruitId");

                    b.ToTable("Fruits");
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.Grain", b =>
                {
                    b.Property<int>("GrainId");

                    b.Property<string>("Description");

                    b.Property<double>("Price");

                    b.HasKey("GrainId");

                    b.ToTable("Grain");
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.GroceryCart", b =>
                {
                    b.Property<int>("DrinkId");

                    b.Property<int>("MeatId");

                    b.Property<int>("VegetableId");

                    b.Property<int>("FruitId");

                    b.Property<int>("GrainId");

                    b.Property<int>("EmployeeId");

                    b.Property<int>("CustomerId");

                    b.HasKey("DrinkId", "MeatId", "VegetableId", "FruitId", "GrainId", "EmployeeId", "CustomerId");

                    b.HasAlternateKey("CustomerId", "DrinkId", "EmployeeId", "FruitId", "GrainId", "MeatId", "VegetableId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FruitId");

                    b.HasIndex("GrainId");

                    b.HasIndex("MeatId");

                    b.HasIndex("VegetableId");

                    b.ToTable("GroceryCart");
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.Meat", b =>
                {
                    b.Property<int>("MeatId");

                    b.Property<string>("Description");

                    b.Property<double>("Price");

                    b.HasKey("MeatId");

                    b.ToTable("Meat");
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.NewClient", b =>
                {
                    b.Property<string>("FirstName");

                    b.Property<string>("Email");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.HasKey("FirstName");

                    b.ToTable("NewClient");
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.OrderRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location");

                    b.Property<string>("NewClientFirstName");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.HasIndex("NewClientFirstName");

                    b.ToTable("OrderRequest");
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.Vegetables", b =>
                {
                    b.Property<int>("VegetableId");

                    b.Property<string>("Description");

                    b.Property<double>("Price");

                    b.HasKey("VegetableId");

                    b.ToTable("Vegetables");
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.GroceryCart", b =>
                {
                    b.HasOne("GroceryShoppingCart.Models.Customer", "Customer")
                        .WithMany("GroceryCart")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GroceryShoppingCart.Models.Drinks", "Drinks")
                        .WithMany("GroceryCart")
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GroceryShoppingCart.Models.Employee", "Employee")
                        .WithMany("GroceryCart")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GroceryShoppingCart.Models.Fruits", "Fruits")
                        .WithMany("GroceryCart")
                        .HasForeignKey("FruitId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GroceryShoppingCart.Models.Grain", "Grain")
                        .WithMany("GroceryCart")
                        .HasForeignKey("GrainId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GroceryShoppingCart.Models.Meat", "Meat")
                        .WithMany("GroceryCart")
                        .HasForeignKey("MeatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GroceryShoppingCart.Models.Vegetables", "Vegetables")
                        .WithMany("GroceryCart")
                        .HasForeignKey("VegetableId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("GroceryShoppingCart.Models.OrderRequest", b =>
                {
                    b.HasOne("GroceryShoppingCart.Models.NewClient", "NewClient")
                        .WithMany("OrderRequests")
                        .HasForeignKey("NewClientFirstName");
                });
#pragma warning restore 612, 618
        }
    }
}
